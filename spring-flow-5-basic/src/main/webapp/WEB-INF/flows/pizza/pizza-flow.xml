<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.4.xsd"
	start-state="identifyCustomer">

	<var name="order" class="com.example.demo.pizza.model.Order" />
	
	<!-- 고객정보 -->
	<subflow-state id="identifyCustomer" subflow="pizza/customer">
		<!-- 서브플로우의 작업결과를 리턴받아서 order.customer에 저장한다. -->
		<output name="customer" value="order.customer"/>
		<transition on="customerReady" to="buildOrder"></transition>
	</subflow-state>
	
	<!-- 주문 상세정보 -->
	<subflow-state id="buildOrder" subflow="pizza/order">
		<!-- order 객체를 전달하고 서브플로우에서 작업결과를 order 객체에 저장한다. -->
		<input name="order" value="order"/>
		<transition on="orderCreated" to="takePayment"></transition>
	</subflow-state>
	
	<!-- 결제정보 -->
	<subflow-state id="takePayment" subflow="pizza/payment">
		<input name="order" value="order"/>
		<transition on="paymentTaken" to="saveOrder"></transition>
	</subflow-state>
	
	<!-- 주문 전체정보 저장 -->
	<action-state id="saveOrder">
		<evaluate expression="pizzaFlowActions.saveOrder(order)"></evaluate>
		<transition to="thankCustomer"></transition>
	</action-state>
	
	<!-- 처리결과 안내 -->
	<view-state id="thankCustomer" view="pizza/thankCustomer">
		<transition to="endState"></transition>
	</view-state>
	
	<end-state id="endState"></end-state>

	<!-- 전역 취소 전이 -->
	<global-transitions>
		<transition on="cancel" to="endState"></transition>
	</global-transitions>
	
</flow>
